plugins {
    id 'java'
    id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version "0.1.25"
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
    id 'maven-publish'
    id 'io.github.oleksiiparf.slack-webhook' version "1.0.0"
}

group 'com.example'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jacoco:org.jacoco.ant:0.8.7'
}

// Define a configuration for the cucumber runtime
configurations {
    cucumberRuntime
}


cucumberReports {
    outputDir = file('build/reports/tests')
    buildId = '0'
    reports = files('reports/example-report.json')
}
tasks.register("generateMatrixAPI"){
    dependsOn(test)
    doLast {
        copy {
            from "build/reports/tests"
            into "./MatrixRelease/Matrix_v_1.0/tests"
        }
        copy {
            from "build/docs/javadoc/"
            into "./MatrixRelease/Matrix_v_1.0/docs"
        }
        copy {
            from "build/libs/"
            into "./MatrixRelease/Matrix_v_1.0/libs"
        }
    }
}

test {
    cucumberReports
    javadoc
    finalizedBy(jacocoTestReport)
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/tests/jacocoHtml')
    }
}

sonar {
    properties {
        property "sonar.projectKey", System.getenv("SONAR_KEY")
        property "sonar.host.url", System.getenv("SONAR_URL")
    }
}

publishing {
    repositories {
        maven {
            url System.getenv("MAVEN_URL")
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
publish{
    dependsOn(generateMatrixAPI)
}
slack {
    publishedPlugin {
        webHook = System.getenv("SLACK_WEBHOOK")
        attachment {
            fallback = "New version successfully published."
            pretext = "New version successfully published."
            color = "good"
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
        attachment {
            fallback = "Another line on sent together."
            pretext = "Another line on sent together."
            color = "good"
            field {
                title = "new version published"
                value = "new version published"
            }
        }
    }
    builtSucceed {
        webHook = System.getenv("SLACK_WEBHOOK")
        attachment {
            fallback = "Project successfully built."
            pretext = "Project successfully built."
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
    }
}

postPublishedPluginToSlack{
    dependsOn(publish)
}






dependencies {
    implementation 'junit:junit:4.13.1'
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'
}


